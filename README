This is the GPL version of the PyMCA XRF Toolkit.
Please read the LICENSE.GPL file to know what that means.

That license grants you the rights to distribute this code under
the same license conditions. However, I would prefer that you refer
to the original source (the ESRF) for download. That should allow
to distribute the last version.


INSTALLATION

In order to simplify the tasks, I have put all the .py modules together.
You will need to build some libraries (sps, specfile, specfit, edf, ...)
Those libraries can be build in the respective directories thru the usual
python setup.py build methods. 

You will need:

- Python (at least 2.3.x) I am currently using python 2.4.2
- Numeric (I'm using version 23.8 because I had a problem with the
innerproduct function of the latest 24 windows version I had access). That could
be corrected by the time you read this. To test:

import Numeric
x=Numeric.arange(100.)
x.shape=[5,20]
a=Numeric.arange(20)
a.shape = [1,20]
print Numeric.innerproduct(x,a)

I am getting this output:

[[  2470.]
 [  6270.]
 [ 10070.]
 [ 13870.]
 [ 17670.]]

The version giving me problems had all elements but the first equal to 0.0

If you want to use the graphical interfaces provided, you will need a running
- PyQt 
- PyQwt

The data selection and display of the main interface need major refactoring.
Besides that, it is not Qt4 compatible. If you want to embed PyMca in your own
PyQt application, I recommend you to use the McaAdvancedFit.py module. It is 
already functional under Qt4 and very easy to embed. All the tools around PyMca
are PyQt4 compatible (PyMcaBatch, PeakIdentifier, QPeriodicTable, ...) and PyQt4
will be the major development platform within one year.

DEVELOPMENT PLANS

- Refactoring of data selection and display. This will involve a source
abstraction to simplify support of other formats.

- Compound fitting.

- Fit configuration speed up to allow compound and multilayers fitting.

- Use of matplotlib. This should improve printing capabilities. I am considering
to use it to replace the QtBlissGraph.py module and to get rid of PyQwt.

- Improve the doc ...

If you have any questions or comments (or contributions!), you can contact me.

Enjoy,

V. Armando Sole
sole@esrf.fr
